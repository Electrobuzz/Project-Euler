#include <bits/stdc++.h>

using namespace std;

template<typename A, typename B> ostream& operator<<(ostream &os, const pair<A, B> &p) { return os << '(' << p.first << ", " << p.second << ')'; }
template<typename T_container, typename T = typename enable_if<!is_same<T_container, string>::value, typename T_container::value_type>::type> ostream& operator<<(ostream &os, const T_container &v) { os << '{'; string sep; for (const T &x : v) os << sep << x, sep = ", "; return os << '}'; }
void dbg_out() { cerr << endl; }
template<typename Head, typename... Tail> void dbg_out(Head H, Tail... T) { cerr << ' ' << H; dbg_out(T...); }
#ifdef LOCAL
#define dbg(...) cerr << "(" << #__VA_ARGS__ << "):", dbg_out(__VA_ARGS__)
#else
#define dbg(...)
#endif

#define ar array
#define ll long long
#define ld long double
#define sza(x) ((int)x.size())
#define all(a) (a).begin(), (a).end()

const int MAX_N = 1e5 + 5;
const ll MOD = 1e9 + 7;
const ll INF = 1e9;
const ld EPS = 1e-9;

string bin(int n){
	string s = "";
	while(n>0){
		int bit = n&1;
		s += ('0'+bit);
		n/=2;
	}
	return s;
}

bool check(int n){
	string s = bin(n);
	int m = s.size();
	for(int i=0;i<=m/2;i++){
		if(s[i] != s[m-i-1]) return false;
	}
	return true;
}

void solve() {
	int ans =0;
	// 1 digits
	for(int a=0;a<=9;a++){
		if(check(a)) ans+=a;
	}
	// 2 digits
	for(int a=1;a<=9;a++){
		int n = a*10+a;
		if(check(n)) ans+=n;
	}
    // 3 digits
    for(int a=1;a<=9;a++){
    	for(int b=0;b<=9;b++){
    		int n = a*100+b*10+a;
    		if(check(n)) ans+=n;
    	}
    }
    // 4 digits
    for(int a=1;a<=9;a++){
    	for(int b=0;b<=9;b++){
    		int n = a*1000+b*100+b*10+a;
    		if(check(n)) ans+=n;
    	}
    }
    
    // 5 digits
    for(int a=1;a<=9;a++){
    	for(int b=0;b<=9;b++){
    		for(int c=0;c<=9;c++){
    			int n = a*10000+b*1000+c*100+b*10+a;
    			if(check(n)) ans+=n;
    		}
    	}
    }
    
    // 6 digit
 	for(int a=1;a<=9;a++){
    	for(int b=0;b<=9;b++){
    		for(int c=0;c<=9;c++){
    			int n = a*100000+b*10000+c*1000+c*100+b*10+a;
    			if(check(n)) ans+=n;
    		}
    	}
    }
 	
    cout<<ans<<endl;
}

int main() {
    ios_base::sync_with_stdio(0);
    cin.tie(0); cout.tie(0);
    int tc = 1;
    // cin >> tc;
    for (int t = 1; t <= tc; t++) {
        // cout << "Case #" << t << ": ";
        solve();
    }
}
