#include <bits/stdc++.h>

using namespace std;

template<typename A, typename B> ostream& operator<<(ostream &os, const pair<A, B> &p) { return os << '(' << p.first << ", " << p.second << ')'; }
template<typename T_container, typename T = typename enable_if<!is_same<T_container, string>::value, typename T_container::value_type>::type> ostream& operator<<(ostream &os, const T_container &v) { os << '{'; string sep; for (const T &x : v) os << sep << x, sep = ", "; return os << '}'; }
void dbg_out() { cerr << endl; }
template<typename Head, typename... Tail> void dbg_out(Head H, Tail... T) { cerr << ' ' << H; dbg_out(T...); }
#ifdef LOCAL
#define dbg(...) cerr << "(" << #__VA_ARGS__ << "):", dbg_out(__VA_ARGS__)
#else
#define dbg(...)
#endif

#define ar array
#define ll long long
#define ld long double
#define sza(x) ((int)x.size())
#define all(a) (a).begin(), (a).end()

const int MAX_N = 1e5 + 5;
const ll MOD = 1e9 + 7;
const ll INF = 1e9;
const ld EPS = 1e-9;

// Main Solution !!!!

void solve() {
    for(int a=0;a<10;a++){
    	for(int b=0;b<10;b++){
    		for(int c=0;c<10;c++){
    			for(int d=0;d<10;d++){
    				for(int e=0;e<10;e++){
    					for(int f=0;f<10;f++){
    						for(int g=0;g<10;g++){
    							int t = a*1e6 +b*1e5+ c*1e4 +d*1e3 +e*1e2+f*1e1+g;
    					int p = pow(a,5)+pow(b,5)+pow(c,5)+pow(d,5)+pow(e,5)+pow(f,5)+pow(g,5);
    					if(p == t) cout<<p<<endl;
    						}
    					}
    				}
    			}
    		}
    	}
    }
}
int main() {
    ios_base::sync_with_stdio(0);
    cin.tie(0); cout.tie(0);
    int tc = 1;
    // cin >> tc;
    for (int t = 1; t <= tc; t++) {
        // cout << "Case #" << t << ": ";
        solve();
        // int a = 0*1e5 +9*1e4+ 4*1e3 +7*1e2 +4;
    					// int p = pow(0,4)+pow(9,4)+pow(4,4)+pow(7,4)+pow(4,4);
    					 // cout<<a<<endl;
    }
}
